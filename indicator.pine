// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© adobrusky

//@version=5
indicator("Buy/Sell Volume Bars", format=format.volume, precision=0)

// User inputs
showMetricBehind = input.bool(false, "Show Volume Metric as Bars Behind")
volumeMetric = input.string("SMA", title = "Volume Metric", options = ['SMA', 'Median'])
volumeSMALength = input.int(50, minval=10, maxval=500,title="Volume SMA Length")
volumeMedianLength = input.int(50, minval=10, maxval=500, title="Volume Median Length (Only Regular Session Data)")
bullColor = input(color.rgb(8, 153, 129, 30), title="Buy Volume Color")
bearColor = input(color.rgb(242, 54, 69, 30), title="Sell Volume Color")
metricColor = input(color.rgb(57, 57, 57, 37), title="Volume Metric Bars Color")
averageLineColor = input(color.rgb(243, 152, 15), title="Volume Metric Line Color")

// Volume calculations
var buyVolume = 0.0
var sellVolume = 0.0
buyVolume := high == low ? 0 : volume *  (close-low)  / (high-low)
usingSMA = volumeMetric == "SMA"
volumeSMA = usingSMA ? ta.sma(volume, volumeSMALength) : 0

// Volume median calculation
get_median(length) =>
    float[] volumes = array.new_float(length)
    for i = 0 to length - 1
        array.set(volumes, i, volume[i])
    array.median(volumes)

var regularSessionTicker = ticker.new(syminfo.prefix, syminfo.tickerid, session.regular)
medianVolume = usingSMA ? 0 : request.security(regularSessionTicker, timeframe.period, get_median(volumeMedianLength))

plot(showMetricBehind ? usingSMA ? volumeSMA : medianVolume : na, style=plot.style_columns, color=metricColor, title="Volume Metric")
plot(volume, style=plot.style_columns, color=bearColor, title="Sell Volume")
plot(buyVolume, style=plot.style_columns, color=bullColor, title="Buy Volume")
plot(not showMetricBehind ? usingSMA ? volumeSMA : medianVolume : na, style=plot.style_line, color=averageLineColor, title="Volume Metric")