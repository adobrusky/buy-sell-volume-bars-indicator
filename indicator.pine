// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© adobrusky

//@version=5
indicator("Buy/Sell Volume Bars", format=format.volume)

// User inputs
showMetric = input.bool(true, "Show Volume Metric")
metricDisplay = input.string("Line", title = "Volume Metric Display", options = ['Line', 'Bars'])
volumeMetric = input.string("SMA", title = "Volume Metric", options = ['SMA', 'Median'])
volumeSMALength = input.int(50, minval=10, maxval=500,title="Volume SMA Length")
volumeMedianLength = input.int(50, minval=10, maxval=500, title="Volume Median Length")
volumeMedianSessionData = input.string("Extended", title = "Volume Median Session Data", options = ['Regular', 'Extended'])
futuresRegularSession = input("0830-1500", title = "Futures Regular Session")
bullColor = input(color.rgb(8, 153, 129), title="Buy Volume Color")
bearColor = input(color.rgb(242, 54, 69), title="Sell Volume Color")
metricColor = input(color.rgb(83, 83, 83, 30), title="Volume Metric Bars Color")
averageLineColor = input(color.rgb(243, 152, 15), title="Volume Metric Line Color")

// Volume calculations
var buyVolume = 0.0
var sellVolume = 0.0
buyVolume := high == low ? 0 : volume *  (close - low)  / (high - low)
usingSMA = volumeMetric == "SMA"
usingLine = metricDisplay == "Line"
volumeSMA = usingSMA ? ta.sma(volume, volumeSMALength) : 0

// Volume median calculation
medianVolume = 0.0
var bool isFuture = str.endswith(syminfo.ticker, "!") and syminfo.type == "futures"
if showMetric and not usingSMA
    var float[] regularMarketVolume = array.new_float(volumeMedianLength)
    var float[] extendedMarketVolume = array.new_float(volumeMedianLength)

    if volumeMedianSessionData == "Extended" and (session.ispremarket or session.ispostmarket or (isFuture and na(time(timeframe.period, futuresRegularSession))))
        if extendedMarketVolume.size() == volumeMedianLength
            extendedMarketVolume.shift()
        array.push(extendedMarketVolume, volume)
    else if (session.ismarket and not isFuture) or (isFuture and not na(time(timeframe.period, futuresRegularSession)))
        if regularMarketVolume.size() == volumeMedianLength
            regularMarketVolume.shift()
        array.push(regularMarketVolume, volume)

    if volumeMedianSessionData == "Regular"
        medianVolume := array.median(regularMarketVolume)
    else if volumeMedianSessionData == "Extended"
        if (session.ismarket and not isFuture) or (isFuture and not na(time(timeframe.period, futuresRegularSession)))
            medianVolume := array.median(regularMarketVolume)
        else
            medianVolume := array.median(extendedMarketVolume)

plot(showMetric and not usingLine ? usingSMA ? volumeSMA : medianVolume : na, style=plot.style_columns, color=metricColor, title="Volume Metric as Bars")
plot(volume, style=plot.style_columns, color=bearColor, title="Sell Volume")
plot(buyVolume, style=plot.style_columns, color=bullColor, title="Buy Volume")
plot(showMetric and usingLine ? usingSMA ? volumeSMA : medianVolume : na, style=plot.style_line, color=averageLineColor, title="Volume Metric as Line")